
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Hi! My name is Vatsal Parsaniya. A technology enthusiast, working to solve real-world problems and trying to bring a change, who enjoys connecting the dots: be it ideas from different disciplines, people from different teams, or applications from different industries.\nI am a Kaggle 3X Expert and keen focus on building accurate, value-generating models that are scalable. Passionate about search-based systems!! I love to extract knowledge \u0026amp; insights from huge and complex data sets. The power of questioning and extracting answers from various data sets has always fascinated me.\nIn my undergraduate studies, I‚Äôve taken on various leadership roles, including the development of chess playing robortic arm, coordinating institute-wide technical events for hundreds of people, and leading the robotics club of the college.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hi! My name is Vatsal Parsaniya. A technology enthusiast, working to solve real-world problems and trying to bring a change, who enjoys connecting the dots: be it ideas from different disciplines, people from different teams, or applications from different industries.","tags":null,"title":"Vatsal Parsaniya","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy‚Äôs Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://vatsalparsaniya.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Vatsal Parsaniya"],"categories":["U-Net","Computer Vision","YOLO"],"content":" ‚ôî‚ôï‚ôó‚ôò‚ôô‚ôö‚ôõ‚ôù‚ôû‚ôü‚ôñ‚ôú\nThe camera captures the image of chessboard then the image is analyzed using image processing to identify the moves made by an opponent and stockfish engine calculates the best possible move.\nMethod of Working Step - 1 Image Transformation Example Input-Frame -\u0026gt; Predicted Mask -\u0026gt; Corner Points -\u0026gt; Warp Perspective Image-\u0026gt; Yolo Inference Image With help of unet model mask chess board and detect chess baord corner points with help of opencv operations. and apply warp perspective transformation on it. Input-Frame warp-perspective locate-boxes Step - 2 Image1 : Image of Chess Board befor player move piece Image2 : Image of Chess Board after player move piece step - 3 Difference of image by using function absdiff in CV2 Change Difference_image to Gray scale image diff = cv2.absdiff(image1,image2) diff_gray = cv2.cvtColor(diff,cv2.COLOR_BGR2GRAY) step - 4 Apply thresholding on Grayscale image Find Contours on threshold image matrix,thresold = cv2.threshold(diff_gray,value,255,cv2.THRESH_BINARY) cnts,_ = cv2.findContours(thresold, cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE) ","date":1618235760,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1618235760,"objectID":"1e589a92b0def6e361c9603256b71259","permalink":"https://vatsalparsaniya.github.io/project/yolo_segmentation_chess/","publishdate":"2021-04-12T19:26:00+05:30","relpermalink":"/project/yolo_segmentation_chess/","section":"project","summary":"‚ôî Chess-playing with AI (Stockfish engine) and Predict best chess move in Real-Time","tags":["U-Net","Computer Vision","YOLO"],"title":"Yolo Segmentation Chess","type":"project"},{"authors":["vatsal parsaniya"],"categories":["Deep Learning","Kaggle","Computer Vision"],"content":"üî¨ SIIM-ISIC-Melanoma-Classification üìù Description Skin cancer is the most prevalent type of cancer. Melanoma, specifically, is responsible for 75% of skin cancer deaths, despite being the least common skin cancer. The American Cancer Society estimates over 100,000 new melanoma cases will be diagnosed in 2020. It‚Äôs also expected that almost 7,000 people will die from the disease. As with other cancers, early and accurate detection‚Äîpotentially aided by data science‚Äîcan make treatment more effective.\nCurrently, dermatologists evaluate every one of a patient‚Äôs moles to identify outlier lesions or ‚Äúugly ducklings‚Äù that are most likely to be melanoma. Existing AI approaches have not adequately considered this clinical frame of reference. Dermatologists could enhance their diagnostic accuracy if detection algorithms take into account ‚Äúcontextual‚Äù images within the same patient to determine which images represent a melanoma. If successful, classifiers would be more accurate and could better support dermatological clinic work.\nAs the leading healthcare organization for informatics in medical imaging, the Society for Imaging Informatics in Medicine (SIIM)‚Äôs mission is to advance medical imaging informatics through education, research, and innovation in a multi-disciplinary community. SIIM is joined by the International Skin Imaging Collaboration (ISIC), an international effort to improve melanoma diagnosis. The ISIC Archive contains the largest publicly available collection of quality-controlled dermoscopic images of skin lesions.\nIn this competition, you‚Äôll identify melanoma in images of skin lesions. In particular, you‚Äôll use images within the same patient and determine which are likely to represent a melanoma. Using patient-level contextual information may help the development of image analysis tools, which could better support clinical dermatologists.\nMelanoma is a deadly disease, but if caught early, most melanomas can be cured with minor surgery. Image analysis tools that automate the diagnosis of melanoma will improve dermatologists‚Äô diagnostic accuracy. Better detection of melanoma has the opportunity to positively impact millions of people.\nüîç Evaluation Submissions are evaluated on area under the ROC curve between the predicted probability and the observed target.\nWhat is AUC - ROC Curve?\nAUC - ROC curve is a performance measurement for classification problem at various thresholds settings. ROC is a probability curve and AUC represents degree or measure of separability. It tells how much model is capable of distinguishing between classes. Higher the AUC, better the model is at predicting 0s as 0s and 1s as 1s. By analogy, Higher the AUC, better the model is at distinguishing between patients with disease and no disease.\nThe ROC curve is plotted with TPR against the FPR where TPR is on y-axis and FPR is on the x-axis.\n‚ñ∂ Here is the link to a great video on roc-auc\nüìù More About Melanoma The most serious type of skin cancer. Melanoma occurs when the pigment-producing cells that give colour to the skin become cancerous. Symptoms might include a new, unusual growth or a change in an existing mole. Melanomas can occur anywhere on the body. Treatment may involve surgery, radiation, medication or in some cases, chemotherapy. Melanoma Hair Remove Kaggle Notebook (120+ ‚≠ê)\nThere are many images with body hair covering the lesion so, hair remove operation can be useful for model focus on lesion part.\nMethod for hair remove using CV2\ndef hair_remove(image): # convert image to grayScale grayScale = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY) # kernel for morphologyEx kernel = cv2.getStructuringElement(1,(17,17)) # apply MORPH_BLACKHAT to grayScale image blackhat = cv2.morphologyEx(grayScale, cv2.MORPH_BLACKHAT, kernel) # apply thresholding to blackhat _,threshold = cv2.threshold(blackhat,10,255,cv2.THRESH_BINARY) # inpaint with original image and threshold image final_image = cv2.inpaint(image,threshold,1,cv2.INPAINT_TELEA) return final_image results of above mention method Visualizing step-wise CV2 Operations ‚úî ABCDE Rule Use the ‚ÄúABCDE rule‚Äù to look for some of the common signs of melanoma, one of the deadliest forms of skin cancer:\n‚úî Ugly Duckling The Ugly Duckling is another warning sign of melanoma. This recognition strategy is based on the concept that most normal moles on your body resemble one another, while melanomas stand out like ugly ducklings in comparison. This highlights the importance of not just checking for irregularities, but also comparing any suspicious spot to surrounding moles to determine whether it looks different from its neighbours. These ugly duckling lesions or outlier lesions can be larger, smaller, lighter or darker, compared to surrounding moles. Also, isolated lesions without any surrounding moles for comparison are considered ugly ducklings.\nMelanomas commonly appear on the legs of women, and the number one place they develop on men is the trunk.\nMany other factors also play a role in ‚Ä¶","date":1598702278,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598702278,"objectID":"23ae07a25808b9f591aac3acf27c17d5","permalink":"https://vatsalparsaniya.github.io/project/siim_isic_melanoma_classification_kaggle/","publishdate":"2020-08-29T17:27:58+05:30","relpermalink":"/project/siim_isic_melanoma_classification_kaggle/","section":"project","summary":"This contains work on a Medical Image Classification Challenge hosted on Kaggle and secured 127th rank out of 3,308 teams and a silver medal ü•à in this competition.","tags":["Deep Learning","Kaggle","Computer Vision"],"title":"SIIM ISIC Melanoma Classification","type":"project"},{"authors":["Vatsal Parsaniya"],"categories":["Computer Vision","YOLO3"],"content":"Looking for Social Distance Monitoring by CCTV integrated with AI? Maintaining social distancing is a very crucial issue in a COVID-19 outbreak scenario.This is an effective way to control the spread of the virus. However it is very difficult to maintain and monitor the social distancing norms in many cases such as in public places, offices and workplaces , where working in a close proximity is a requirement\nCOVID-19 has impacted society in a drastic way. Due to this invisible enemy, it is required to keep a social distance between humans. But as human beings are social animals, it has been really difficult to maintain the required social distance in different areas. And due to this factor, logarithmic increase in the number of cases has been really huge.\nResults Result Videos Youtube Video 1 Youtube Video 2 Youtube Video 3 Step-by-Step Solution Jupyter Notebook Model selection: People detection (Model to detect humans ex: Yolo(You only look once)) Load and start the model Pass a video frame through the model to detect objects Filter out weak predictions and non-relevant objects (other than humans) Birds-eye view transformation Select the coordinates of the points located at the bottom centre of the detected person box Perspective transform on selected point for top view with the help of a computer vision library Social distancing measurement With the help of transformed points calculate euclidean distance and map with image pixels to the real distance between 2 people. If they are not maintaining social distancing then mark their respective boxes using Red colour Results and Improvements Using a faster model in order to perform real-time social distancing analysis. Automatic calibration problems could improve a lot the birds-eye view transformation on different scenes. Birds eye View Transformation original Image Transformed Image Birds eye View Output dashboard Input Image Output Image ","date":1593630938,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593630938,"objectID":"9f3d307f31c76c23294ab0afdd3fd697","permalink":"https://vatsalparsaniya.github.io/project/social_distance_surveillance/","publishdate":"2020-07-02T00:45:38+05:30","relpermalink":"/project/social_distance_surveillance/","section":"project","summary":"Computer Vision and AI to detect if people are at a specific distance and adhere to social distancing or not.","tags":["Computer Vision","YOLO3"],"title":"Social Distance Surveillance","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let‚Äôs make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://vatsalparsaniya.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]